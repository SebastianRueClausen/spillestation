#version 450

const uint VRAM_SIZE = 1024 * 1024;

layout (set = 0, binding = 0) buffer readonly Vram {
		uint display_area_x;
		uint display_area_y;
		uint vram[VRAM_SIZE / 4];
};
layout (set = 0, binding = 1, rgba16f) uniform writeonly image2D tex;

uint offset(uint x, uint y) {
		// return (x * 2 + y * 2048) & (VRAM_SIZE - 1);
		return (x + y * 1024) & (VRAM_SIZE - 1);
}

void main() {
		uint y_start = display_area_y;
		uint x_start = display_area_x;
		uint offset = offset(x_start + gl_WorkGroupID.x, y_start + gl_WorkGroupID.y);

		uint hi_or_lo = 16 * (offset & 1);
		uint color = vram[offset >> 1] & (0xffff << hi_or_lo);
		color = color >> hi_or_lo;
		

		float r = float((color << 3) & 0xf8);
		float g = float((color >> 2) & 0xf8);
		float b = float((color >> 7) & 0xf8);

		imageStore(tex, ivec2(gl_WorkGroupID.xy), vec4(r / 255.0, g / 255.0, b / 255.0, 1.0));
}
